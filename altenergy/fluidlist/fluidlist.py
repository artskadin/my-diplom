from CoolProp.CoolProp import get_global_param_string

class FluidList:
    """ список всех веществ """
    def get_all_fluids(self):
        """ получить список всех веществ """
        all_fluids_string = get_global_param_string("FluidsList")
        all_fluids = all_fluids_string.split(',')
        return all_fluids


    def get_special_fluids(self):
        """ полчить массив списков веществ как этого требует flask """
        all_fluids = [('1-Butene','1-Butene'),
                      ('Acetone', 'Ацетон'),
                      ('Air', 'Воздух'),
                      ('Ammonia', 'Аммиак'),
                      ('Argon', 'Аргон'),
                      ('Benzene', 'Бензин'),
                      ('CarbonDioxide', 'Диоксид углерода'),
                      ('CarbonMonoxide', 'Монооксид углерода'),
                      ('CarbonylSulfide', 'CarbonylSulfide'),
                      ('cis-2-Butene', '2-Бутен'),
                      ('CycloHexane', 'Циклогексан'),
                      ('Cyclopentane', 'Циклопентан'),
                      ('CycloPropane', 'Циклопропан'),
                      ('D4', 'D4'),
                      ('D5', 'D5'),
                      ('D6', 'D6'),
                      ('Deuterium', 'Дейтерий'),
                      ('Dichloroethane', 'Дихлорэтан'),
                      ('DiethylEther', 'Диэтиловый эфир'),
                      ('DimethylCarbonate', 'Диметилкарбонат'),
                      ('DimethylEther', 'Диметиловый эфир'),
                      ('Ethane', 'Этан'),
                      ('Ethanol', 'Этанол'),
                      ('EthylBenzene', 'Этилбензол'),
                      ('Ethylene', 'Этилен'),
                      ('EthyleneOxide', 'Окись этилена'),
                      ('Fluorine', 'Фтор'),
                      ('HeavyWater', 'Тяжелая вода'),
                      ('Helium', 'Гелий'),
                      ('HFE143m', 'HFE143m'),
                      ('Hydrogen', 'Водород'),
                      ('HydrogenChloride', 'Хлороводород'),
                      ('HydrogenSulfide', 'Сероводород'),
                      ('IsoButane', 'Изобутан'),
                      ('IsoButene', 'Изобутилен'),
                      ('Isohexane', 'Изогексан'),
                      ('Isopentane', 'Изопентан'),
                      ('Krypton', 'Криптон'),
                      ('m-Xylene', 'm-Xylene'),
                      ('MD2M', 'MD2M'),
                      ('MD3M', 'MD3M'),
                      ('MD4M', 'MD4M'),
                      ('MDM', 'MDM'),
                      ('Methane', 'Метан'),
                      ('Methanol', 'Метанол'),
                      ('MethylLinoleate', 'MethylLinoleate'),
                      ('MethylLinolenate', 'MethylLinolenate'),
                      ('MethylOleate', 'MethylOleate'),
                      ('MethylPalmitate', 'Метилпальмитат'),
                      ('MethylStearate', 'MethylStearate'),
                      ('MM', 'MM'),
                      ('n-Butane', 'Бутан'),
                      ('n-Decane', 'Декан'),
                      ('n-Dodecane', 'Додекан'),
                      ('n-Heptane', 'Гептан'),
                      ('n-Hexane', 'Гексан'),
                      ('n-Nonane', 'Нонан'),
                      ('n-Octane', 'Октан'),
                      ('n-Pentane', 'Пентан'),
                      ('n-Propane', 'Пропан'),
                      ('n-Undecane', 'Ундекан'),
                      ('Neon', 'Неон'),
                      ('Neopentane', 'Неопентан'),
                      ('Nitrogen', 'Азот'),
                      ('NitrousOxide', 'Оксид азота'),
                      ('Novec649', 'Novec649'),
                      ('o-Xylene', 'О-ксилол'),
                      ('OrthoDeuterium', 'OrthoDeuterium'),
                      ('OrthoHydrogen', 'OrthoHydrogen'),
                      ('Oxygen', 'Кислород'),
                      ('p-Xylene', 'p-Xylene'),
                      ('ParaDeuterium', 'ParaDeuterium'),
                      ('ParaHydrogen', 'ParaHydrogen'),
                      ('Propylene', 'Пропилен'),
                      ('Propyne', 'Пропин'),
                      ('R11', 'R11'),
                      ('R113', 'R113'),
                      ('R114', 'R114'),
                      ('R115', 'R115'),
                      ('R116', 'R116'),
                      ('R12', 'R12'),
                      ('R123', 'R123'),
                      ('R1233zd(E)', 'R1233zd(E)'),
                      ('R1234yf', 'R1234yf'),
                      ('R1234ze(E)', 'R1234ze(E)'),
                      ('R1234ze(Z)', 'R1234ze(Z)'),
                      ('R124', 'R124'),
                      ('R125', 'R125'),
                      ('R13', 'R13'),
                      ('R134a', 'R134a'),
                      ('R13I1', 'R13I1'),
                      ('R14', 'R14'),
                      ('R141b', 'R141b'),
                      ('R142b', 'R142b'),
                      ('R143a', 'R143a'),
                      ('R152A', 'R152A'),
                      ('R161', 'R161'),
                      ('R21', 'R21'),
                      ('R218', 'R218'),
                      ('R22', 'R22'),
                      ('R227EA', 'R227EA'),
                      ('R23', 'R23'),
                      ('R236EA', 'R236EA'),
                      ('R236FA', 'R236FA'),
                      ('R245ca', 'R245ca'),
                      ('R245fa', 'R245fa'),
                      ('R32', 'R32'),
                      ('R365MFC', 'R365MFC'),
                      ('R40', 'R40'),
                      ('R404A', 'R404A'),
                      ('R407C', 'R407C'),
                      ('R41', 'R41'),
                      ('R410A', 'R410A'),
                      ('R507A', 'R507A'),
                      ('RC318', 'RC318'),
                      ('SES36', 'SES36'),
                      ('SulfurDioxide', 'Оксид серы'),
                      ('SulfurHexafluoride', 'Фторид серы'),
                      ('Toluene', 'Толуол'),
                      ('trans-2-Butene', 'trans-2-Butene'),
                      ('Water', 'Вода'),
                      ('Xenon', 'Ксенон'),]
        return all_fluids


    def getParamList(self):
        """ get list parameters """
        paramList = [('P', 'Давление (P)'),
                     ('T', 'Температура (T)'),
                     ('D', 'Плотность (D)'),
                     ('V', 'Объем (V)'),
                     ('H', 'Энтальпия (h)'),
                     ('S', 'Энтропия (S)'),
                     ('Q', 'Степень сухости (x)'),]

        return paramList
